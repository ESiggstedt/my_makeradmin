version: "3"
services:
  db2:
    image: mysql:8
    # The lumen library seems to use an older mysql client which is not able to connect if mysql uses the newer caching_sha2_password authentication plugin.
    # Therefore we need to override the mysql starting command to set a config option to use the older password authentication plugin.
    command: mysqld --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - dbdata:/var/lib/mysql
      - ./logs/mysql:/var/www/html/storage/logs
    environment:
      # Note: the config only seems to be updated when the container is initially created.
      # If the db config needs to be changed then the db image and volume needs to be destroyed first.
      MYSQL_DATABASE: "${MYSQL_DB}"
      MYSQL_ROOT_HOST: "db2"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASS}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    networks:
      - makeradmin

  servicebase:
    image: makeradmin/servicebase:1.0
    build:
      context: ./library
      dockerfile: DockerfileServiceBase
    networks:
      - makeradmin

  library:
    image: makeradmin/library:1.0
    build:
      context: ./library
      dockerfile: Dockerfile
    depends_on:
      - servicebase
    networks:
      - makeradmin

  api:
    image: makeradmin/api:1.0
    build:
      context: ./api
    depends_on:
      - db2
    networks:
      - makeradmin
    environment:
      API_BEARER:
      APP_DEBUG:
      MYSQL_HOST: db2
      MYSQL_DB:
      MYSQL_PORT:
      MYSQL_USER:
      MYSQL_PASS:
      MEMBERSHIP_URL:
      SHOP_URL:
      MEMBER_URL:
      MESSAGES_URL:
      EMAIL_DISPATCHER_URL:
      MULTIACCESS_SYNC_URL:
      VIRTUAL_HOST: "${HOST_BACKEND}"
      LETSENCRYPT_HOST: "${HOST_BACKEND}"
      LETSENCRYPT_EMAIL: "${ADMIN_EMAIL}"
      
  backend:
    image: makeradmin/backend:1.0
    build: backend
    environment:
      TABLE_PREFIX: "webshop"
      MYSQL_HOST: "db2:${MYSQL_PORT}"
      MYSQL_DB: "makeradmin"
      MYSQL_USER:
      MYSQL_PASS:
      APIGATEWAY: "api"
      BEARER: "${API_BEARER}"
      HOST_FRONTEND:
      HOST_BACKEND:
      HOST_PUBLIC:
      APP_DEBUG:
      STRIPE_PRIVATE_KEY:
      STRIPE_PUBLIC_KEY:
      STRIPE_SIGNING_SECRET:
    depends_on:
      - api
    networks:
      - makeradmin
      
  public:
    image: makeradmin/public:1.0
    volumes:
      - "./.webshop_product_images:/work/static/product_images"
    build: public
    environment:
      APIGATEWAY: "api"
      HOST_BACKEND:
      STRIPE_PUBLIC_KEY:
      APP_DEBUG:
      VIRTUAL_HOST: "${HOST_PUBLIC}"
      LETSENCRYPT_HOST: "${HOST_PUBLIC}"
      LETSENCRYPT_EMAIL: "${ADMIN_EMAIL}"
    networks:
      - makeradmin
      
  membership:
    image: makeradmin/membership:1.0
    build:
      context: ./membership
      dockerfile: ${PWD}/library/DockerfileService
    volumes:
      - ./logs/membership:/var/www/html/storage/logs
    environment:
      MYSQL_HOST: "db2:${MYSQL_PORT}"
      MYSQL_DB: "makeradmin"
      MYSQL_USER:
      MYSQL_PASS:
      APIGATEWAY: "api"
      BEARER: "${API_BEARER}"
    depends_on:
      - api
    networks:
      - makeradmin

  messages:
    image: makeradmin/messages:1.0
    build:
      context: ./messages
      dockerfile: ${PWD}/library/DockerfileService
    volumes:
      - ./logs/messages:/var/www/html/storage/logs
    environment:
      MYSQL_HOST: "db2:${MYSQL_PORT}"
      MYSQL_DB: "makeradmin"
      MYSQL_USER:
      MYSQL_PASS:
      APIGATEWAY: "api"
      BEARER: "${API_BEARER}"
    depends_on:
      - api
    networks:
      - makeradmin

  email-dispatcher:
    image: makeradmin/messages-dispatcher-email:1.0
    build:
      context: ./emaildispatcher
      dockerfile: ${PWD}/library/DockerfileService
    environment:
      MYSQL_HOST: "db2:${MYSQL_PORT}"
      MYSQL_DB: "makeradmin"
      MYSQL_USER:
      MYSQL_PASS:
      APIGATEWAY: "api"
      BEARER: "${API_BEARER}"
      MAILGUN_DOMAIN:
      MAILGUN_KEY:
      MAILGUN_FROM:
      MAILGUN_TO_OVERRIDE:
    depends_on:
      - api
      - messages
    networks:
      - makeradmin

  multiaccesssync:
    image: makeradmin/multiaccesssync:1.0
    build:
      context: ./multiaccesssync
      dockerfile: ${PWD}/library/DockerfileService
    volumes:
      - ./data/multiaccess-uploads:/var/www/html/storage/uploads
    environment:
      APIGATEWAY: api
      BEARER: "${API_BEARER}"
    depends_on:
      - api
    networks:
      - makeradmin

  admin:
    image: makeradmin/admin:1.0
    build: ./admin
    environment:
      HOST_BACKEND:
      VIRTUAL_HOST: "${HOST_FRONTEND}"
      LETSENCRYPT_HOST: "${HOST_FRONTEND}"
      LETSENCRYPT_EMAIL: "${ADMIN_EMAIL}"
    networks:
      - makeradmin

networks:
  makeradmin:
volumes:
  dbdata:
