version: "2"
services:
  db2:
    image: mysql:5.7
    # The lumen library seems to use an older mysql client which is not able to connect if mysql uses the newer caching_sha2_password authentication plugin.
    # Therefore we need to override the mysql starting command to set a config option to use the older password authentication plugin.
    command: mysqld --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - dbdata:/var/lib/mysql
      - ./logs/mysql:/var/www/html/storage/logs
    environment:
      # Note: the config only seems to be updated when the container is initially created.
      # If the db config needs to be changed then the db image and volume needs to be destroyed first.
      MYSQL_DATABASE: "${MYSQL_DB}"
      MYSQL_ROOT_HOST: "db2"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASS}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    networks:
      - makeradmin

  servicebase:
    image: makeradmin/servicebase:1.0
    build:
      context: ./MakerAdmin-ServiceBase
    networks:
      - makeradmin

  api-gateway:
    image: makeradmin/apigateway:1.0
    build:
      context: ./MakerAdmin-ApiGateway
      dockerfile: ${PWD}/MakerAdmin-ServiceBase/DockerfileService
    volumes:
      - ./logs/apigateway:/var/www/html/storage/logs
    depends_on:
      - db2
    ports:
      - "8010:80"
    depends_on:
      - servicebase
    networks:
      - makeradmin
    environment:
      APP_DEBUG: "true"
      MYSQL_HOST: "db2:${MYSQL_PORT}"
      MYSQL_DB: "makeradmin-apigateway"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASS: "${MYSQL_PASS}"
      BEARER: "${API_BEARER}"

  current-member:
    image: makeradmin/current-member:1.0
    build:
      context: ./MakerAdmin-CurrentMember/
      dockerfile: member_view/Dockerfile
    environment:
      MYSQL_HOST: "db2:${MYSQL_PORT}"
      MYSQL_DB: "makeradmin-membership"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASS: "${MYSQL_PASS}"
      APIGATEWAY: "api-gateway"
      BEARER: "${API_BEARER}"
      HOST_FRONTEND:
      HOST_BACKEND:
      APP_DEBUG: "true"
    depends_on:
      - api-gateway
    networks:
      - makeradmin

  webshop:
    image: makeradmin/webshop:1.0
    container_name: makeradmin-webshop
    volumes:
      - "./MakerAdmin-CurrentMember/webshop/src/static:/var/www/service/static"
      - "./MakerAdmin-CurrentMember/webshop/src/templates:/var/www/service/templates"
    build:
      context: ./MakerAdmin-CurrentMember/
      dockerfile: webshop/Dockerfile
    ports:
      - "8011:80"
    environment:
        MYSQL_HOST: "db2:${MYSQL_PORT}"
        MYSQL_DB: "makeradmin-webshop"
        MYSQL_USER: "${MYSQL_USER}"
        MYSQL_PASS: "${MYSQL_PASS}"
        APIGATEWAY: "api-gateway"
        BEARER: "${API_BEARER}"
        HOST_FRONTEND:
        HOST_BACKEND:
        APP_DEBUG: "true"
    depends_on:
      - api-gateway
    networks:
      - makeradmin

  rfid:
    image: makeradmin/rfid:1.0
    build:
      context: ./MakerAdmin-CurrentMember/
      dockerfile: rfid/Dockerfile
    environment:
      MYSQL_HOST: "db2:${MYSQL_PORT}"
      MYSQL_DB: "makeradmin-rfid"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASS: "${MYSQL_PASS}"
      APIGATEWAY: "api-gateway"
      BEARER: "${API_BEARER}"
      HOST_FRONTEND:
      HOST_BACKEND:
      APP_DEBUG: "true"
    depends_on:
      - api-gateway
    networks:
      - makeradmin

  economy:
    image: makeradmin/economy:1.0
    build:
      context: ./MakerAdmin-Economy
      dockerfile: ${PWD}/MakerAdmin-ServiceBase/DockerfileService
    volumes:
      - ./logs/economy:/var/www/html/storage/logs
      - ./data/economy-vouchers:/var/www/html/vouchers
    environment:
      MYSQL_HOST: "db2:${MYSQL_PORT}"
      MYSQL_DB: "makeradmin-economy"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASS: "${MYSQL_PASS}"
      APIGATEWAY: "api-gateway"
      BEARER: "${API_BEARER}"
    depends_on:
      - api-gateway
    networks:
      - makeradmin

  membership:
    image: makeradmin/membership:1.0
    build:
      context: ./MakerAdmin-Membership
      dockerfile: ${PWD}/MakerAdmin-ServiceBase/DockerfileService
    volumes:
      - ./logs/membership:/var/www/html/storage/logs
    environment:
      MYSQL_HOST: "db2:${MYSQL_PORT}"
      MYSQL_DB: "makeradmin-membership"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASS: "${MYSQL_PASS}"
      APIGATEWAY: "api-gateway"
      BEARER: "${API_BEARER}"
    depends_on:
      - api-gateway
    networks:
      - makeradmin

  messages:
    image: makeradmin/messages:1.0
    build:
      context: ./MakerAdmin-Messages
      dockerfile: ${PWD}/MakerAdmin-ServiceBase/DockerfileService
    volumes:
      - ./logs/messages:/var/www/html/storage/logs
    environment:
      MYSQL_HOST: "db2:${MYSQL_PORT}"
      MYSQL_DB: "makeradmin-messages"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASS: "${MYSQL_PASS}"
      APIGATEWAY: "api-gateway"
      BEARER: "${API_BEARER}"
    depends_on:
      - api-gateway
    networks:
      - makeradmin

  email-dispatcher:
    image: makeradmin/messages-dispatcher-email:1.0
    build:
      context: ./MakerAdmin-MessagesDispatcherEmail
      dockerfile: ${PWD}/MakerAdmin-ServiceBase/DockerfileService
    environment:
      MYSQL_HOST: "db2:${MYSQL_PORT}"
      MYSQL_DB: "makeradmin-messages"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASS: "${MYSQL_PASS}"
      APIGATEWAY: "api-gateway"
      BEARER: "${API_BEARER}"
      MAILGUN_DOMAIN: "${MAILGUN_DOMAIN}"
      MAILGUN_KEY: "${MAILGUN_KEY}"
      MAILGUN_FROM: "${MAILGUN_FROM}"
    depends_on:
      - api-gateway
      - messages
    networks:
      - makeradmin

  sales:
    image: makeradmin/sales:1.0
    build:
      context: ./MakerAdmin-Sales
      dockerfile: ${PWD}/MakerAdmin-ServiceBase/DockerfileService
    volumes:
      - ./logs/sales:/var/www/html/storage/logs
    environment:
      MYSQL_HOST: "db2:${MYSQL_PORT}"
      MYSQL_DB: "makeradmin-sales"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASS: "${MYSQL_PASS}"
      APIGATEWAY: "api-gateway"
      BEARER: "${API_BEARER}"
    depends_on:
      - api-gateway
    networks:
      - makeradmin

  multiaccesssync:
    image: makeradmin/multiaccesssync:1.0
    build:
      context: ./MakerAdmin-MultiAccessSync
      dockerfile: ${PWD}/MakerAdmin-ServiceBase/DockerfileService
    volumes:
      - ./data/multiaccess-uploads:/var/www/html/storage/uploads
    environment:
      APIGATEWAY: api-gateway
      BEARER: "${API_BEARER}"
    depends_on:
      - api-gateway
    networks:
      - makeradmin

  frontend:
    image: makeradmin/frontend:1.0
    build: ./MakerAdmin-Frontend
    environment:
      HOST_BACKEND:
    ports:
      - "8009:80"
    depends_on:
      - economy
      - membership
      - messages
      - sales
    networks:
      - makeradmin

networks:
  makeradmin:
volumes:
  dbdata:
